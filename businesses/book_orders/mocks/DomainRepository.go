// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	book_orders "Pinjem/businesses/book_orders"
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// DomainRepository is an autogenerated mock type for the DomainRepository type
type DomainRepository struct {
	mock.Mock
}

// Create provides a mock function with given fields: ctx, domain
func (_m *DomainRepository) Create(ctx context.Context, domain book_orders.Domain) (book_orders.Domain, error) {
	ret := _m.Called(ctx, domain)

	var r0 book_orders.Domain
	if rf, ok := ret.Get(0).(func(context.Context, book_orders.Domain) book_orders.Domain); ok {
		r0 = rf(ctx, domain)
	} else {
		r0 = ret.Get(0).(book_orders.Domain)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, book_orders.Domain) error); ok {
		r1 = rf(ctx, domain)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteByOrderId provides a mock function with given fields: ctx, orderId
func (_m *DomainRepository) DeleteByOrderId(ctx context.Context, orderId uint) error {
	ret := _m.Called(ctx, orderId)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, uint) error); ok {
		r0 = rf(ctx, orderId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetAll provides a mock function with given fields: ctx
func (_m *DomainRepository) GetAll(ctx context.Context) ([]book_orders.Domain, error) {
	ret := _m.Called(ctx)

	var r0 []book_orders.Domain
	if rf, ok := ret.Get(0).(func(context.Context) []book_orders.Domain); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]book_orders.Domain)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetById provides a mock function with given fields: ctx, id
func (_m *DomainRepository) GetById(ctx context.Context, id string) (book_orders.Domain, error) {
	ret := _m.Called(ctx, id)

	var r0 book_orders.Domain
	if rf, ok := ret.Get(0).(func(context.Context, string) book_orders.Domain); ok {
		r0 = rf(ctx, id)
	} else {
		r0 = ret.Get(0).(book_orders.Domain)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetByOrderId provides a mock function with given fields: ctx, id
func (_m *DomainRepository) GetByOrderId(ctx context.Context, id uint) ([]book_orders.Domain, error) {
	ret := _m.Called(ctx, id)

	var r0 []book_orders.Domain
	if rf, ok := ret.Get(0).(func(context.Context, uint) []book_orders.Domain); ok {
		r0 = rf(ctx, id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]book_orders.Domain)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, uint) error); ok {
		r1 = rf(ctx, id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
